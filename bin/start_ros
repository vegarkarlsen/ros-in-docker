#!/usr/bin/bash
#vim: filetype=bash

SCRIPT_PATH=$(realpath "$0")
PROJECT_ROOT=$(dirname "$(dirname "$SCRIPT_PATH")")
VERSION_FILE=$PROJECT_ROOT/.ros-version

if [ -z $ROS_DOCKER_DISTRO ]; then

    if [ -f $VERSION_FILE ]; then
        ROS_DOCKER_DISTRO=$(cat ${PROJECT_ROOT}/.ros-version)
    else
        echo "Error: ROS_DOCKER_DISTRO is not set. Please set it and try again.";
        exit 1;
    fi
fi

if [ ! -f $PROJECT_ROOT/ros-images/$ROS_DOCKER_DISTRO/Dockerfile ]; then
    echo "Did not find dockerfile for $ROS_DOCKER_DISTRO locally.";
    cd $PROJECT_ROOT && make generate-dockerfile;
fi

# User info
UID=$(id -u)
GID=$(id -g)

# X - Server socket
XSOCK=/tmp/.X11-unix

# Display authentication
XAUTH=/tmp/.ros_in_docker.xauth
touch $XAUTH
xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -

# TODO: this solution does not allow multiple containers to run simultaneously
# echo $ROS_DOCKER_DISTRO > "${PROJECT_ROOT}/.ros-version"


echo -n "Starting container for $ROS_DOCKER_DISTRO with ID: "

# docker compose -f "${PROJECT_ROOT}/compose.yaml" up --build -d

# -e ROS_MASTER_URI=http://$MASTER_IP:11311 \
# -e ROS_IP=$LOCAL_IP \
docker run -it -d \
    --name ros-${ROS_DOCKER_DISTRO}-container \
    -e DISPLAY=$DISPLAY \
    -e LIBGL_ALWAYS_SOFTWARE=1 \
    -e XAUTHORITY=${XAUTH} \
    -v /etc/group:/etc/group:ro \
    -v /etc/passwd:/etc/passwd:ro \
    -v /etc/shadow:/etc/shadow:ro \
    -v /etc/sudoers.d:/etc/sudoers.d:ro \
    -v ${XSOCK}:${XSOCK}:rw \
    -v ${XAUTH}:${XAUTH}:rw \
    -v /home/$USER:/home/$USER \
    -w /home/$USER \
    -u ${UID}:${GID} \
    ros-${ROS_DOCKER_DISTRO}:latest

