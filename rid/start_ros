#!/usr/bin/bash
#vim: filetype=bash

SCRIPT_PATH=$(realpath "$0")
PROJECT_ROOT=$(dirname "$(dirname "$SCRIPT_PATH")")

# Sets $DOCKER_CONTAINER_NAME
source $PROJECT_ROOT/rid/common.bash
set_container_name

# Build if not allready built
ROS_DOCKER_DIR="$PROJECT_ROOT/ros-images/$ROS_DOCKER_DISTRO"
DOCKER_IMAGE_EXISTS=$(docker image ls | grep -E "^ros-$ROS_DOCKER_DISTRO")
if [ -z "$DOCKER_IMAGE_EXISTS" ]; then

    echo "Found no local image for $ROS_DOCKER_DISTRO. Bulding..."

    if [ ! -f  "$ROS_DOCKER_DIR/Dockerfile" ]; then
        echo "Did not find dockerfile for $ROS_DOCKER_DISTRO locally. Generating...";
        cd $PROJECT_ROOT && make generate-dockerfile;
    fi
    docker build -t "ros-$ROS_DOCKER_DISTRO" $ROS_DOCKER_DIR
fi

# User info
UID=$(id -u)
GID=$(id -g)

# X - Server socket
XSOCK=/tmp/.X11-unix

# Display authentication
XAUTH=/tmp/.ros_in_docker.xauth
if [ ! -f "$XAUTH" ]; then
    touch $XAUTH
    xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -
fi

echo -n "Starting container for $ROS_DOCKER_DISTRO with ID: "

# -e ROS_MASTER_URI=http://$MASTER_IP:11311 \
# -e ROS_IP=$LOCAL_IP \
docker run -it -d \
    --name ros-${ROS_DOCKER_DISTRO}-container \
    -e DISPLAY=$DISPLAY \
    -e LIBGL_ALWAYS_SOFTWARE=1 \
    -e XAUTHORITY=${XAUTH} \
    -v /etc/group:/etc/group:ro \
    -v /etc/passwd:/etc/passwd:ro \
    -v /etc/shadow:/etc/shadow:ro \
    -v /etc/sudoers.d:/etc/sudoers.d:ro \
    -v ${XSOCK}:${XSOCK}:rw \
    -v ${XAUTH}:${XAUTH}:rw \
    -v /home/$USER:/home/$USER \
    -w /home/$USER \
    -u ${UID}:${GID} \
    ros-${ROS_DOCKER_DISTRO}:latest

